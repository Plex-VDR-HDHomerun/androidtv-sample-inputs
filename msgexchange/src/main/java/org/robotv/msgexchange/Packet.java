/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.robotv.msgexchange;

public class Packet {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Packet(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Packet obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jniwrapJNI.delete_Packet(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Packet(int msgid, int type, long uid) {
    this(jniwrapJNI.new_Packet__SWIG_0(msgid, type, uid), true);
  }

  public Packet(int msgid, int type) {
    this(jniwrapJNI.new_Packet__SWIG_1(msgid, type), true);
  }

  public Packet(int msgid) {
    this(jniwrapJNI.new_Packet__SWIG_2(msgid), true);
  }

  public Packet() {
    this(jniwrapJNI.new_Packet__SWIG_3(), true);
  }

  public void createUid() {
    jniwrapJNI.Packet_createUid(swigCPtr, this);
  }

  public boolean putString(String string) {
    return jniwrapJNI.Packet_putString(swigCPtr, this, string);
  }

  public boolean putU8(short c) {
    return jniwrapJNI.Packet_putU8(swigCPtr, this, c);
  }

  public boolean putU16(int us) {
    return jniwrapJNI.Packet_putU16(swigCPtr, this, us);
  }

  public boolean putS16(short s) {
    return jniwrapJNI.Packet_putS16(swigCPtr, this, s);
  }

  public boolean putU32(long ul) {
    return jniwrapJNI.Packet_putU32(swigCPtr, this, ul);
  }

  public boolean putS32(int l) {
    return jniwrapJNI.Packet_putS32(swigCPtr, this, l);
  }

  public boolean putU64(java.math.BigInteger ull) {
    return jniwrapJNI.Packet_putU64(swigCPtr, this, ull);
  }

  public boolean putS64(long ll) {
    return jniwrapJNI.Packet_putS64(swigCPtr, this, ll);
  }

  public void clear() {
    jniwrapJNI.Packet_clear(swigCPtr, this);
  }

  public void rewind() {
    jniwrapJNI.Packet_rewind(swigCPtr, this);
  }

  public String getString() {
    return jniwrapJNI.Packet_getString(swigCPtr, this);
  }

  public short getU8() {
    return jniwrapJNI.Packet_getU8(swigCPtr, this);
  }

  public int getU16() {
    return jniwrapJNI.Packet_getU16(swigCPtr, this);
  }

  public short getS16() {
    return jniwrapJNI.Packet_getS16(swigCPtr, this);
  }

  public long getU32() {
    return jniwrapJNI.Packet_getU32(swigCPtr, this);
  }

  public int getS32() {
    return jniwrapJNI.Packet_getS32(swigCPtr, this);
  }

  public java.math.BigInteger getU64() {
    return jniwrapJNI.Packet_getU64(swigCPtr, this);
  }

  public long getS64() {
    return jniwrapJNI.Packet_getS64(swigCPtr, this);
  }

  public void setClientID(int oid) {
    jniwrapJNI.Packet_setClientID(swigCPtr, this, oid);
  }

  public int getClientID() {
    return jniwrapJNI.Packet_getClientID(swigCPtr, this);
  }

  public boolean eop() {
    return jniwrapJNI.Packet_eop(swigCPtr, this);
  }

  public void freeze() {
    jniwrapJNI.Packet_freeze(swigCPtr, this);
  }

  public long getPacketLength() {
    return jniwrapJNI.Packet_getPacketLength(swigCPtr, this);
  }

  public long getPayloadLength() {
    return jniwrapJNI.Packet_getPayloadLength(swigCPtr, this);
  }

  public long getUID() {
    return jniwrapJNI.Packet_getUID(swigCPtr, this);
  }

  public int getMsgID() {
    return jniwrapJNI.Packet_getMsgID(swigCPtr, this);
  }

  public int getType() {
    return jniwrapJNI.Packet_getType(swigCPtr, this);
  }

  public long getCheckSum() {
    return jniwrapJNI.Packet_getCheckSum(swigCPtr, this);
  }

  public long getPayloadCheckSum() {
    return jniwrapJNI.Packet_getPayloadCheckSum(swigCPtr, this);
  }

  public void disablePayloadCheckSum() {
    jniwrapJNI.Packet_disablePayloadCheckSum(swigCPtr, this);
  }

  public int getProtocolVersion() {
    return jniwrapJNI.Packet_getProtocolVersion(swigCPtr, this);
  }

  public void setProtocolVersion(int version) {
    jniwrapJNI.Packet_setProtocolVersion(swigCPtr, this, version);
  }

  public void setMsgID(int msgid) {
    jniwrapJNI.Packet_setMsgID(swigCPtr, this, msgid);
  }

  public void setType(int type) {
    jniwrapJNI.Packet_setType(swigCPtr, this, type);
  }

  public boolean compress(int level) {
    return jniwrapJNI.Packet_compress(swigCPtr, this, level);
  }

  public boolean isCompressed() {
    return jniwrapJNI.Packet_isCompressed(swigCPtr, this);
  }

  public boolean uncompress() {
    return jniwrapJNI.Packet_uncompress(swigCPtr, this);
  }

  public void print() {
    jniwrapJNI.Packet_print(swigCPtr, this);
  }

  public void copy(Packet p) {
    jniwrapJNI.Packet_copy(swigCPtr, this, Packet.getCPtr(p), p);
  }

  public int remaining() {
    return jniwrapJNI.Packet_remaining(swigCPtr, this);
  }

  public void skipBuffer(int length) {
    jniwrapJNI.Packet_skipBuffer(swigCPtr, this, length);
  }

  public void readBuffer(byte[] BYTE, int offset, int length) {
    jniwrapJNI.Packet_readBuffer(swigCPtr, this, BYTE, offset, length);
  }

  public void writeBuffer(byte[] BYTE, int offset, int length) {
    jniwrapJNI.Packet_writeBuffer(swigCPtr, this, BYTE, offset, length);
  }

  public final static int headerLength = jniwrapJNI.Packet_headerLength_get();
  public final static int checkSumPos = jniwrapJNI.Packet_checkSumPos_get();
  public final static int uncompressedPayloadLengthPos = jniwrapJNI.Packet_uncompressedPayloadLengthPos_get();
  public final static int payloadLengthPos = jniwrapJNI.Packet_payloadLengthPos_get();
  public final static int payloadCheckSumPos = jniwrapJNI.Packet_payloadCheckSumPos_get();
  public final static int protocolVersionPos = jniwrapJNI.Packet_protocolVersionPos_get();
  public final static int clientIDPos = jniwrapJNI.Packet_clientIDPos_get();
  public final static int typePos = jniwrapJNI.Packet_typePos_get();
  public final static int msgIDPos = jniwrapJNI.Packet_msgIDPos_get();
  public final static int uIDPos = jniwrapJNI.Packet_uIDPos_get();
  public final static int syncPos = jniwrapJNI.Packet_syncPos_get();

}
